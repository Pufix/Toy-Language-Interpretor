Stack:
[string filename;
filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{}
Output:
[]

Stack:
[filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, string filename]
Symbol Table:
{}
Output:
[]

Stack:
[filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=}
Output:
[]

Stack:
[openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, filename=test.in]
Symbol Table:
{filename=}
Output:
[]

Stack:
[openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, openFile(filename)]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, int a]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=0, filename=test.in}
Output:
[]

Stack:
[int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, readFile(filename, a)]
Symbol Table:
{a=0, filename=test.in}
Output:
[]

Stack:
[int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, filename=test.in}
Output:
[]

Stack:
[readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, int b]
Symbol Table:
{a=15, filename=test.in}
Output:
[]

Stack:
[readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, b=0, filename=test.in}
Output:
[]

Stack:
[if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, readFile(filename, b)]
Symbol Table:
{a=15, b=0, filename=test.in}
Output:
[]

Stack:
[if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, b=50, filename=test.in}
Output:
[]

Stack:
[print(a<b)]
Symbol Table:
{a=15, b=50, filename=test.in}
Output:
[]

Stack:
[]
Symbol Table:
{a=15, b=50, filename=test.in}
Output:
[a<b]

Stack:
[string filename;
filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{}
Output:
[]

Stack:
[filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, string filename]
Symbol Table:
{}
Output:
[]

Stack:
[filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=}
Output:
[]

Stack:
[openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, filename=test.in]
Symbol Table:
{filename=}
Output:
[]

Stack:
[openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, openFile(filename)]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, int a]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=0, filename=test.in}
Output:
[]

Stack:
[int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, readFile(filename, a)]
Symbol Table:
{a=0, filename=test.in}
Output:
[]

Stack:
[int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, filename=test.in}
Output:
[]

Stack:
[readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, int b]
Symbol Table:
{a=15, filename=test.in}
Output:
[]

Stack:
[readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, b=0, filename=test.in}
Output:
[]

Stack:
[if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, readFile(filename, b)]
Symbol Table:
{a=15, b=0, filename=test.in}
Output:
[]

Stack:
[if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, b=50, filename=test.in}
Output:
[]

Stack:
[print(a<b)]
Symbol Table:
{a=15, b=50, filename=test.in}
Output:
[]

Stack:
[]
Symbol Table:
{a=15, b=50, filename=test.in}
Output:
[a<b]

Stack:
[string filename;
filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{}
Output:
[]

Stack:
[filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, string filename]
Symbol Table:
{}
Output:
[]

Stack:
[filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=}
Output:
[]

Stack:
[openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, filename=test.in]
Symbol Table:
{filename=}
Output:
[]

Stack:
[openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, openFile(filename)]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, int a]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=0, filename=test.in}
Output:
[]

Stack:
[int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, readFile(filename, a)]
Symbol Table:
{a=0, filename=test.in}
Output:
[]

Stack:
[int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, filename=test.in}
Output:
[]

Stack:
[readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, int b]
Symbol Table:
{a=15, filename=test.in}
Output:
[]

Stack:
[readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, b=0, filename=test.in}
Output:
[]

Stack:
[if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, readFile(filename, b)]
Symbol Table:
{a=15, b=0, filename=test.in}
Output:
[]

Stack:
[if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, b=15, filename=test.in}
Output:
[]

Stack:
[if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}]
Symbol Table:
{a=15, b=15, filename=test.in}
Output:
[]

Stack:
[if(a==b){
    print(a=b)}]
Symbol Table:
{a=15, b=15, filename=test.in}
Output:
[]

Stack:
[print(a=b)]
Symbol Table:
{a=15, b=15, filename=test.in}
Output:
[]

Stack:
[]
Symbol Table:
{a=15, b=15, filename=test.in}
Output:
[a=b]

Stack:
[string filename;
filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{}
Output:
[]

Stack:
[filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, string filename]
Symbol Table:
{}
Output:
[]

Stack:
[filename=test.in;
openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=}
Output:
[]

Stack:
[openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, filename=test.in]
Symbol Table:
{filename=}
Output:
[]

Stack:
[openFile(filename);
int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, openFile(filename)]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[int a;
readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, int a]
Symbol Table:
{filename=test.in}
Output:
[]

Stack:
[readFile(filename, a);
int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=0, filename=test.in}
Output:
[]

Stack:
[int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, readFile(filename, a)]
Symbol Table:
{a=0, filename=test.in}
Output:
[]

Stack:
[int b;
readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, filename=test.in}
Output:
[]

Stack:
[readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, int b]
Symbol Table:
{a=15, filename=test.in}
Output:
[]

Stack:
[readFile(filename, b);
if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, b=0, filename=test.in}
Output:
[]

Stack:
[if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}, readFile(filename, b)]
Symbol Table:
{a=15, b=0, filename=test.in}
Output:
[]

Stack:
[if(a<b) {
   print(a<b)
}else{
  if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}}]
Symbol Table:
{a=15, b=10, filename=test.in}
Output:
[]

Stack:
[if(b<a) {
   print(b<a)
}else{
  if(a==b){
    print(a=b)}}]
Symbol Table:
{a=15, b=10, filename=test.in}
Output:
[]

Stack:
[print(b<a)]
Symbol Table:
{a=15, b=10, filename=test.in}
Output:
[]

Stack:
[]
Symbol Table:
{a=15, b=10, filename=test.in}
Output:
[b<a]

